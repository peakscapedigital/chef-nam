---
import Layout from '../../layouts/Layout.astro';
import Card from '../../components/ui/Card.astro';
import { getPosts, urlFor } from '../../utils/sanity';

// Fetch all blog posts
const allPosts = await getPosts();

// Transform posts for display with fallback images
const fallbackImages = [
  "https://images.unsplash.com/photo-1464207687429-7505649dae38?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80", // Food plating
  "https://images.unsplash.com/photo-1556909114-f6e7ad7d3136?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80", // Corporate catering
  "https://images.unsplash.com/photo-1540420773420-3366772f4999?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80", // Fresh ingredients
  "https://images.unsplash.com/photo-1519225421980-715cb0215aed?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80", // Wedding setup
  "https://images.unsplash.com/photo-1530103862676-de8c9debad1d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80", // Party food
  "https://images.unsplash.com/photo-1511795409834-ef04bbd61622?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80"  // Professional catering
];

const posts = allPosts.map((post, index) => ({
  title: post.title,
  excerpt: post.excerpt,
  category: post.categories?.[0] || 'Blog',
  categories: post.categories || [],
  date: post.publishedAt,
  slug: post.slug.current,
  featuredImage: post.featuredImage ? 
    urlFor(post.featuredImage.asset).width(400).height(300).url() : 
    fallbackImages[index % fallbackImages.length],
  author: post.author?.name || 'Chef Nam'
}));

// Get unique categories for filtering
const categories = ['All', ...new Set(allPosts.flatMap(post => post.categories).filter(Boolean))];

const formatDate = (dateString: string) => {
  return new Date(dateString).toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long', 
    day: 'numeric'
  });
};

const formatCategory = (category: string) => {
  const categoryMap: { [key: string]: string } = {
    'thai-fusion': 'Thai Fusion',
    'wedding': 'Wedding',
    'corporate': 'Corporate',
    'social': 'Social Events',
    'recipes': 'Recipes',
    'tips': 'Tips'
  };
  return categoryMap[category] || category;
};
---

<Layout 
  title="Blog - Chef Nam Catering | Catering Tips, Recipes & Stories"
  description="Discover catering tips, recipes, and stories from Chef Nam. Get inspiration for your next event and learn about global flavors and thoughtful hospitality."
  canonical="https://chefnamcatering.com/blog"
>
  <main>
    <!-- Hero Section -->
    <section class="pt-32 pb-20 bg-brand-indigo">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
        <h1 class="text-4xl md:text-5xl lg:text-6xl font-serif font-bold text-white mb-6">
          Stories From Our Kitchen
        </h1>
        <p class="text-xl text-white/90 max-w-3xl mx-auto leading-relaxed">
          Tips, recipes, and insights about creating memorable catering experiences with global flavors and thoughtful hospitality.
        </p>
      </div>
    </section>

    <!-- Filter Section -->
    <section class="py-12 bg-brand-white border-b">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex flex-wrap gap-4 justify-center">
          {categories.map(category => (
            <button 
              class={`px-6 py-3 rounded-full text-sm font-medium border transition-colors filter-btn ${
                category === 'All' ? 'bg-brand-indigo text-white border-brand-indigo hover:bg-brand-indigo/90' : 'bg-white text-brand-indigo border-brand-indigo/20 hover:bg-brand-cream hover:border-brand-indigo/40'
              }`}
              data-filter={category === 'All' ? 'all' : category}
            >
              {formatCategory(category)}
            </button>
          ))}
        </div>
      </div>
    </section>

    <!-- Blog Posts Grid -->
    <section class="py-20 bg-brand-white">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        {posts.length === 0 ? (
          <div class="text-center py-20">
            <h2 class="text-2xl font-serif font-semibold text-brand-indigo mb-4">No posts yet</h2>
            <p class="text-brand-indigo/70">Check back soon for exciting content from Chef Nam!</p>
          </div>
        ) : (
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8" id="posts-grid">
            {posts.map(post => (
              <Card 
                variant="default" 
                href={`/blog/${post.slug}`}
                class="post-card h-full flex flex-col"
                data-categories={post.categories.join(',')}
              >
                {post.featuredImage ? (
                  <img 
                    src={post.featuredImage}
                    alt={post.title}
                    class="w-full h-48 object-cover rounded-lg mb-6"
                    loading="lazy"
                  />
                ) : (
                  <div class="w-full h-48 bg-brand-cream rounded-lg mb-6 flex items-center justify-center">
                    <span class="text-brand-indigo/40 text-sm">Blog Post Image</span>
                  </div>
                )}
                
                <div class="flex items-center gap-4 mb-4">
                  <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-brand-amber/10 text-brand-amber">
                    {formatCategory(post.category)}
                  </span>
                  <span class="text-sm text-brand-indigo/60">
                    {formatDate(post.date)}
                  </span>
                </div>
                
                <h2 class="text-xl font-serif font-semibold text-brand-indigo mb-3 leading-tight">
                  {post.title}
                </h2>
                
                <p class="text-brand-indigo/70 mb-4 leading-relaxed line-clamp-3 flex-grow">
                  {post.excerpt}
                </p>

                <div class="flex items-center justify-between mt-auto pt-4 border-t border-brand-indigo/10">
                  <span class="text-sm text-brand-indigo/60">By {post.author}</span>
                  <span class="text-brand-amber font-semibold hover:text-brand-amber/80 transition-colors">
                    Read More â†’
                  </span>
                </div>
              </Card>
            ))}
          </div>
        )}

        {posts.length > 6 && (
          <div class="text-center mt-12">
            <button 
              id="load-more"
              class="inline-flex items-center px-8 py-3 bg-brand-amber text-white font-semibold rounded-lg hover:bg-brand-amber/90 transition-colors"
            >
              Load More Posts
            </button>
          </div>
        )}
      </div>
    </section>
  </main>

  <!-- Category Filter Script -->
  <script>
    // Simple category filtering
    document.addEventListener('DOMContentLoaded', () => {
      const filterButtons = document.querySelectorAll('.filter-btn');
      const postCards = document.querySelectorAll('.post-card');

      filterButtons.forEach(button => {
        button.addEventListener('click', () => {
          const filter = button.getAttribute('data-filter');
          
          // Update active button - reset all to inactive state
          filterButtons.forEach(btn => {
            btn.classList.remove('bg-brand-indigo', 'bg-brand-indigo/90', 'text-white', 'border-brand-indigo');
            btn.classList.add('bg-white', 'text-brand-indigo', 'border-brand-indigo/20', 'hover:bg-brand-cream', 'hover:border-brand-indigo/40');
          });
          
          // Set clicked button to active state
          button.classList.remove('bg-white', 'text-brand-indigo', 'border-brand-indigo/20', 'hover:bg-brand-cream', 'hover:border-brand-indigo/40');
          button.classList.add('bg-brand-indigo', 'text-white', 'border-brand-indigo', 'hover:bg-brand-indigo/90');

          // Filter posts
          postCards.forEach(card => {
            const categories = card.getAttribute('data-categories');
            if (filter === 'all' || categories?.includes(filter)) {
              card.style.display = 'block';
            } else {
              card.style.display = 'none';
            }
          });
        });
      });
    });
  </script>

  <style>
    .line-clamp-3 {
      display: -webkit-box;
      -webkit-line-clamp: 3;
      -webkit-box-orient: vertical;
      overflow: hidden;
    }
  </style>
</Layout>